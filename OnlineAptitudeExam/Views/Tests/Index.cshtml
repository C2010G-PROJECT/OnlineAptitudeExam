@model PagedList.IPagedList<OnlineAptitudeExam.Models.Test>
@using PagedList.Mvc;

@{
    ViewBag.Title = "Tests";
}


<div class="row mb-3 flex-md-row flex-sm-column-reverse justify-content-between">
    <div class="col-lg-4 col-md-6 col-sm-12">
        @using (Html.BeginForm("Index", "Tests", FormMethod.Get))
        {
            <div class="input-group">
                <input id="SearchString" class="form-control form-control-sm " name="SearchString" type="text" placeholder="Search" value="@ViewBag.CurrentFilter">
                <div class="input-group-append">
                    <button class="btn btn-danger" type="submit">
                        <i class="mdi mdi-magnify"></i>
                    </button>
                </div>
            </div>
        }
    </div>
    <div class="col-lg-4 col-md-6 col-sm-12 d-flex justify-content-end">
        <button class="btn btn-success" type="button">
            <i class="mdi mdi-plus"></i>
        </button>
    </div>
</div>

<div class="table-responsive">
    <table class="table table-hover table-light">
        <thead >
            <tr>
                <th>
                    @Html.ActionLink("#", "Index", new { sortType = "stt", sortOrder = ViewBag.SortType, currentFilter = ViewBag.CurrentFilter })
                </th>
                <th>
                    @Html.ActionLink("Name", "Index", new { sortType = "name", sortOrder = ViewBag.SortType, currentFilter = ViewBag.CurrentFilter })
                </th>
                <th>
                    @Html.ActionLink("Date Create", "Index", new { sortType = "date", sortOrder = ViewBag.SortType, currentFilter = ViewBag.CurrentFilter })
                </th>
                <th>
                    Status
                </th>
                <th></th>
            </tr>
        </thead>

        <tbody>
            @for (int i = 0; i < Model.Count(); i++)
            {
                var item = Model[i];

                <tr>
                    <td>
                        @((Model.PageNumber - 1) * Model.PageSize + i + 1)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.created_date)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.status)
                    </td>
                    <td>
                        @Html.ActionLink("Edit", "Edit", new { id = item.id }) |
                        @Html.ActionLink("Details", "Details", new { id = item.id }) |
                        @Html.ActionLink("Delete", "Delete", new { id = item.id })
                    </td>
                </tr>
            }

        </tbody>
    </table>
</div>

<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
@Html.PagedListPager(Model, page => Url.Action("Index",
    new { sortType = ViewBag.CurrentType, sortOrder = ViewBag.CurrentOrder, currentFilter = ViewBag.CurrentFilter, page = page }))
