@model OnlineAptitudeExam.Models.LoginViewModel
@{
    ViewBag.Title = "Login";
    Layout = "";
}
<!DOCTYPE html>
<html lang="en">
<head>
    <!-- Required meta tags -->
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />
    <title>Admin-Login</title>
    <link rel="shortcut icon" href="@Url.Content("~/Content/images/logo-mini.svg")" />
    <!-- plugins:css -->
    @Styles.Render("~/Content/css/admin/style.css")
    <!-- end plugins:css -->
</head>
<body style="background: rgb(2,0,36); background: linear-gradient(90deg, rgba(2,0,36,1) 0%, rgba(9,81,121,1) 0%, rgba(0,212,255,1) 100%);"> 
    <div class="row justify-content-center align-items-center min-vh-100 ">
        <div class="col-lg-4 col-md-6 col-sm-12">
            <div class="card shadow">
                <div class="card-body">
                    <h2>Login</h2>
                    <hr />
                    @using (Html.BeginForm("Login", "Auth", FormMethod.Post, new { role = "form" }))
                    {
                        @Html.AntiForgeryToken()
                        <div class="form-group">
                            @Html.LabelFor(m => m.UserName)
                            @Html.TextBoxFor(m => m.UserName, new { @class = "form-control", @Value = ViewBag.username, @placeholder = "Username" })
                            @Html.ValidationMessageFor(m => m.UserName, "", new { @class = "text-danger text-small" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.Password)
                            @Html.PasswordFor(m => m.Password, new { @class = "form-control", @Value = ViewBag.password, @placeholder = "Password" })
                            @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger text-small" })
                        </div>
                        <div class="form-check">
                            @if (ViewBag.checkbox != null)
                            {
                                @Html.CheckBoxFor(m => m.RememberMe, new { @class = "mouse-pointer", @Checked = "" })
                            }
                            else
                            {
                                @Html.CheckBoxFor(m => m.RememberMe, new { @class = "mouse-pointer" })
                            }
                            @Html.LabelFor(m => m.RememberMe, new { @class = "mouse-pointer user-select-none" })
                        </div>
                        <input type="submit" class="btn btn-primary w-100 btn-lg" value="Login" />
                        if (ViewBag.Error != null)
                        {
                            <h6 class="text-danger text-center pt-3">@ViewBag.Error</h6>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
    <script>
        if (window.history.replaceState) 
            window.history.replaceState(null, null, window.location.href);
    </script>
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")
</body>
</html>